{"version":3,"sources":["components/Hello.tsx","index.tsx"],"names":["audio","Hello","DIV_ELEMENT","useRef","DIV_ELEMENT2","DIV_ELEMENT3","INPUT_ELEMENT","useState","visible","setVisible","loading","setLoading","addmusic","setAddmusic","remove_music","setRemoveMusic","playlist","setPlaylist","isStop","setisStop","REMOVE_LIST","useEffect","a","fetch","process","response","json","GetPlayList","CheckURL","current","value","data","url","method","headers","body","JSON","stringify","message","style","display","classList","add","innerHTML","length","RemoveMusic","e","filename","target","previousSibling","remove","id","onClick","className","ref","Play","child","children","i","animation","animationDelay","min","max","random","Math","floor","undefined","pause","Audio","play","splice","addEventListener","type","placeholder","spellCheck","onKeyUp","map","v","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.288a40ee.chunk.js","sourcesContent":["import { useRef, useState, useEffect } from 'react'\r\nimport '../scss/Hello.scss'\r\nlet audio: any\r\n\r\nconst Hello = () => {\r\n\r\n  const DIV_ELEMENT = useRef<HTMLDivElement>(null)\r\n  const DIV_ELEMENT2 = useRef<HTMLDivElement>(null)\r\n  const DIV_ELEMENT3 = useRef<HTMLDivElement>(null)\r\n  const INPUT_ELEMENT = useRef<HTMLInputElement>(null)\r\n  const [visible, setVisible]: any = useState(false)\r\n  const [loading, setLoading]: any = useState(false)\r\n  const [addmusic, setAddmusic]: any = useState(false)\r\n  const [remove_music, setRemoveMusic]: any = useState(false)\r\n  const [playlist, setPlaylist]: any = useState([])\r\n  const [isStop, setisStop]: any = useState(true)\r\n  let REMOVE_LIST: any = ''\r\n\r\n  useEffect(() => { \r\n    const GetPlayList = async () => {\r\n      const response = await fetch(process.env.REACT_APP_URL + '/init')\r\n      let json = await response.json()\r\n      setPlaylist(json)\r\n      REMOVE_LIST = json\r\n    }\r\n    GetPlayList()\r\n  }, [])\r\n\r\n  const CloseSubTag = () => {\r\n    if(visible) setVisible(false)\r\n  }\r\n\r\n  const ShowSettings = () => {\r\n    visible ? setVisible(false) : setVisible(true)\r\n  }\r\n\r\n  const CheckURL = async () => {\r\n    if(INPUT_ELEMENT.current?.value !== '') {\r\n      setLoading(true)\r\n\r\n      type Data = {\r\n        url: string | undefined\r\n      }\r\n\r\n      let data: Data = {\r\n        url: INPUT_ELEMENT.current?.value\r\n      }\r\n      const response = await fetch(process.env.REACT_APP_URL + '/backend/extract', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n  \r\n      const result = await response.json()\r\n      \r\n      if(result.message === 'Success') {\r\n        DIV_ELEMENT2.current!.style.display = 'block'\r\n        DIV_ELEMENT2.current!.classList.add('success')\r\n        DIV_ELEMENT2.current!.innerHTML = '곡이 등록되었습니다'\r\n        setLoading(false)\r\n      } else {\r\n        DIV_ELEMENT2.current!.style.display = 'block'\r\n        DIV_ELEMENT2.current!.classList.add('fail')\r\n        DIV_ELEMENT2.current!.innerHTML = '유효하지 않은 URL 입니다'\r\n        setLoading(false)\r\n      }\r\n    } else {\r\n      setLoading(false)\r\n    }\r\n\r\n    if(INPUT_ELEMENT.current?.value.length === 0) {\r\n      DIV_ELEMENT2.current!.style.display = 'none'\r\n      DIV_ELEMENT2.current!.innerHTML = ''\r\n    }\r\n  }\r\n\r\n  const GetRandom = (min: number, max: number) => {\r\n    return Math.floor(Math.random() * (max - min) + min)\r\n  }\r\n\r\n  const Play = () => {\r\n    DIV_ELEMENT3.current!.style.display = 'block'\r\n    const child: any = DIV_ELEMENT.current?.children\r\n    for(let i = 0; i < child.length; i++) { child[i].style.animation = 'animate 1s linear infinite' }\r\n    child[0].style.animationDelay = '0s'\r\n    child[1].style.animationDelay = '0.3s'\r\n    child[2].style.animationDelay = '0.6s'\r\n    child[3].style.animationDelay = '0.9s'\r\n    child[4].style.animationDelay = '0.2s'\r\n    child[5].style.animationDelay = '0.5s'\r\n    child[6].style.animationDelay = '0.8s'\r\n    if(!isStop) setisStop(true)\r\n\r\n    let random = GetRandom(0, playlist.length)\r\n    if(audio !== undefined) audio.pause()\r\n    // audio = new Audio('hello/AKMU - FREEDOM (AUDIO).mp3') <== FOR TEST\r\n    audio = new Audio('/hello/mp3/' + playlist[random])\r\n    audio.play()\r\n    playlist.splice(random, 1)\r\n    audio.addEventListener('ended', Play)\r\n  }\r\n  \r\n  const Stop = () => {\r\n    if(audio !== undefined) {\r\n      DIV_ELEMENT3.current!.style.display = 'none'\r\n      const child: any = DIV_ELEMENT.current?.children\r\n      for(let i = 0; i < child.length; i++) { child[i].style.animation = '' }\r\n      audio.pause()\r\n      setisStop(false)\r\n    } \r\n  }\r\n  const Restart = () => {\r\n    if(audio !== undefined) {\r\n      DIV_ELEMENT3.current!.style.display = 'block'\r\n      const child: any = DIV_ELEMENT.current?.children\r\n      for(let i = 0; i < child.length; i++) { child[i].style.animation = 'animate 1s linear infinite' }\r\n      child[0].style.animationDelay = '0s'\r\n      child[1].style.animationDelay = '0.3s'\r\n      child[2].style.animationDelay = '0.6s'\r\n      child[3].style.animationDelay = '0.9s'\r\n      child[4].style.animationDelay = '0.2s'\r\n      child[5].style.animationDelay = '0.5s'\r\n      child[6].style.animationDelay = '0.8s'\r\n      audio.play()\r\n      setisStop(true)\r\n    }\r\n  }\r\n\r\n  const CloseAddMusic = () => {\r\n    setAddmusic(false)\r\n    setLoading(false)\r\n  }\r\n\r\n  const RemoveMusic = async (e: any) => {\r\n\r\n    type DeleteDate = {\r\n      filename: string\r\n    }\r\n\r\n    let data: DeleteDate = {\r\n      filename: e.target.previousSibling.innerHTML\r\n    }\r\n\r\n    const response = await fetch(process.env.REACT_APP_URL + '/backend/delete', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n    const result = await response.json()\r\n\r\n    if(result.message === 'Success') {\r\n      e.target.previousSibling.remove()\r\n      e.target.remove()\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id='hello' onClick={CloseSubTag}>\r\n      <header>\r\n        <div className='logo'>Hello!</div>\r\n        <div className='settings' onClick={ShowSettings}></div>\r\n        {visible?\r\n        <ul>\r\n          <li onClick={()=>setAddmusic(true)}>곡 등록</li>\r\n          <li onClick={()=>setRemoveMusic(true)}>곡 삭제</li>\r\n        </ul>\r\n        : null}\r\n      </header>\r\n      <section>\r\n        <div className='status-wrapper' ref={DIV_ELEMENT3}>\r\n          <div className='music-wave-loader' ref={DIV_ELEMENT}>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n          </div>\r\n        </div>\r\n        <div className='control-wrapper'>\r\n          <button onClick={Play}>PLAY</button>\r\n          { isStop ?\r\n            <button onClick={Stop}>STOP</button>\r\n            :   \r\n            <button onClick={Restart}>RESTART</button>\r\n          }\r\n        </div>\r\n      </section>\r\n      <footer>\r\n\r\n      </footer>\r\n      { addmusic?\r\n      <div className='add-music-wrapper'>\r\n          <input type='text' placeholder='유튜브 링크를 입력하세요' spellCheck={false} ref={INPUT_ELEMENT} onKeyUp={CheckURL} />\r\n          { loading ? \r\n          <div className='loading-wrapper'>\r\n            <div className='loading'></div>\r\n          </div>\r\n          : null }\r\n          <div className='add-result' ref={DIV_ELEMENT2}></div>\r\n          <div className='close-add-music' onClick={CloseAddMusic}>닫기</div>\r\n      </div> \r\n      : null }\r\n      {\r\n      remove_music?\r\n      <div className='remove-modal'>\r\n            <div className='modal-overlay'></div>\r\n            <div className='modal-wrapper'>\r\n              <div className='modal-header'>\r\n                header\r\n              </div>\r\n              <div className='modal-contents'>\r\n                {REMOVE_LIST.map((v: any, i:any) => (\r\n                <ul>\r\n                  <li key={i}>{v}</li><span onClick={RemoveMusic}>x</span>\r\n                </ul>\r\n                ))}\r\n                {/* <ul>\r\n                  <li>YOU THINK I'M STUPID? YOU THINK I'M CRAZY</li><span onClick={RemoveMusic}>x</span>\r\n                </ul>\r\n                <ul>\r\n                  <li>AKMU - FREEDOM (AUDIO).mp3</li><span onClick={RemoveMusic}>x</span>\r\n                </ul> */}\r\n              </div>\r\n              <div className='modal-footer' onClick={()=>setRemoveMusic(false)}>닫기</div>\r\n            </div>\r\n      </div>\r\n      : null }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Hello\r\n","import ReactDOM from 'react-dom'\nimport Hello from './components/Hello'\n\nReactDOM.render(\n  <Hello />\n  ,document.getElementById('root')\n)\n"],"sourceRoot":""}