{"version":3,"sources":["components/Hello.tsx","index.tsx"],"names":["Hello","audio","DIV_ELEMENT","useRef","DIV_ELEMENT2","INPUT_ELEMENT","useState","visible","setVisible","loading","setLoading","addmusic","setAddmusic","playlist","setPlaylist","isStop","setisStop","useEffect","a","fetch","process","response","json","GetPlayList","CheckURL","current","value","data","url","method","headers","body","JSON","stringify","message","style","display","classList","add","innerHTML","length","GetRandom","min","max","Math","floor","random","id","onClick","className","ref","child","children","i","animation","animationDelay","undefined","pause","Audio","play","addEventListener","type","placeholder","spellCheck","onKeyUp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c5a97f0.chunk.js","sourcesContent":["import { useRef, useState, useEffect } from 'react'\r\nimport '../scss/Hello.scss'\r\n\r\nconst Hello = () => {\r\n\r\n  const DIV_ELEMENT = useRef<HTMLDivElement>(null)\r\n  const DIV_ELEMENT2 = useRef<HTMLDivElement>(null)\r\n  const INPUT_ELEMENT = useRef<HTMLInputElement>(null)\r\n  const [visible, setVisible]: any = useState(false)\r\n  const [loading, setLoading]: any = useState(false)\r\n  const [addmusic, setAddmusic]: any = useState(false)\r\n  const [playlist, setPlaylist]: any = useState([])\r\n  const [isStop, setisStop]: any = useState(true)\r\n  let audio: any\r\n\r\n  useEffect(() => { \r\n    const GetPlayList = async () => {\r\n      const response = await fetch(process.env.REACT_APP_URL + '/init')\r\n      let json = await response.json()\r\n      setPlaylist(json)\r\n    }\r\n    GetPlayList()\r\n  }, [])\r\n\r\n  const CloseSubTag = () => {\r\n    if(visible) setVisible(false)\r\n  }\r\n\r\n  const ShowSettings = () => {\r\n    visible ? setVisible(false) : setVisible(true)\r\n  }\r\n\r\n  const CheckURL = async () => {\r\n    if(INPUT_ELEMENT.current?.value !== '') {\r\n      setLoading(true)\r\n\r\n      type Data = {\r\n        url: string | undefined\r\n      }\r\n\r\n      let data: Data = {\r\n        url: INPUT_ELEMENT.current?.value\r\n      }\r\n      const response = await fetch(process.env.REACT_APP_URL + '/backend/extract', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n  \r\n      const result = await response.json()\r\n      \r\n      if(result.message === 'Success') {\r\n        DIV_ELEMENT2.current!.style.display = 'block'\r\n        DIV_ELEMENT2.current!.classList.add('success')\r\n        DIV_ELEMENT2.current!.innerHTML = '곡이 등록되었습니다'\r\n        setLoading(false)\r\n      } else {\r\n        DIV_ELEMENT2.current!.style.display = 'block'\r\n        DIV_ELEMENT2.current!.classList.add('fail')\r\n        DIV_ELEMENT2.current!.innerHTML = '유효하지 않은 URL 입니다'\r\n        setLoading(false)\r\n      }\r\n    } else {\r\n      setLoading(false)\r\n    }\r\n\r\n    if(INPUT_ELEMENT.current?.value.length === 0) {\r\n      DIV_ELEMENT2.current!.style.display = 'none'\r\n      DIV_ELEMENT2.current!.innerHTML = ''\r\n    }\r\n  }\r\n\r\n  const GetRandom = (min: number, max: number) => {\r\n    return Math.floor(Math.random() * (max - min) + min)\r\n  }\r\n\r\n  const Play = () => {\r\n    const child: any = DIV_ELEMENT.current?.children\r\n    for(let i = 0; i < child.length; i++) { child[i].style.animation = 'animate 1s linear infinite' }\r\n    child[0].style.animationDelay = '0s'\r\n    child[1].style.animationDelay = '0.3s'\r\n    child[2].style.animationDelay = '0.6s'\r\n    child[3].style.animationDelay = '0.9s'\r\n    child[4].style.animationDelay = '0.2s'\r\n    child[5].style.animationDelay = '0.5s'\r\n    child[6].style.animationDelay = '0.8s'\r\n    // DIV_ELEMENT.current!.style.height = '50px'\r\n\r\n    let random = GetRandom(0, playlist.length)\r\n    if(audio !== undefined) audio.pause()\r\n    audio = new Audio('/hello/mp3/' + playlist[random])\r\n    audio.play()\r\n    audio.addEventListener('ended', function () {\r\n      random = GetRandom(0, playlist.length)\r\n      audio = new Audio('/hello/mp3/' + playlist[random])\r\n      audio.play()\r\n    })\r\n\r\n  }\r\n  \r\n  const Stop = () => {\r\n    if(audio !== undefined) {\r\n      const child: any = DIV_ELEMENT.current?.children\r\n      for(let i = 0; i < child.length; i++) { child[i].style.animation = '' }\r\n      audio.pause()\r\n      setisStop(false)\r\n    } \r\n  }\r\n  const Restart = () => {\r\n    if(audio !== undefined) {\r\n      const child: any = DIV_ELEMENT.current?.children\r\n      for(let i = 0; i < child.length; i++) { child[i].style.animation = 'animate 1s linear infinite' }\r\n      child[0].style.animationDelay = '0s'\r\n      child[1].style.animationDelay = '0.3s'\r\n      child[2].style.animationDelay = '0.6s'\r\n      child[3].style.animationDelay = '0.9s'\r\n      child[4].style.animationDelay = '0.2s'\r\n      child[5].style.animationDelay = '0.5s'\r\n      child[6].style.animationDelay = '0.8s'\r\n      audio.play()\r\n      setisStop(true)\r\n    }\r\n  }\r\n\r\n  const CloseAddMusic = () => {\r\n    setAddmusic(false)\r\n    setLoading(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <div id='hello' onClick={CloseSubTag}>\r\n      <header>\r\n        <div className='logo'>Hello!</div>\r\n        <div className='settings' onClick={ShowSettings}></div>\r\n        {visible?\r\n        <ul>\r\n          <li onClick={()=>setAddmusic(true)}>곡 등록</li>\r\n          <li>곡 삭제</li>\r\n        </ul>\r\n        : null}\r\n      </header>\r\n      <section>\r\n        <div className='status-wrapper'>\r\n          <div className='music-wave-loader' ref={DIV_ELEMENT}>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n          </div>\r\n        </div>\r\n        <div className='control-wrapper'>\r\n          <button onClick={Play}>PLAY</button>\r\n          { isStop ?\r\n            <button onClick={Stop}>STOP</button>\r\n            :   \r\n            <button onClick={Restart}>RESTART</button>\r\n          }\r\n        </div>\r\n      </section>\r\n      <footer>\r\n\r\n      </footer>\r\n      { addmusic?\r\n      <div className='add-music-wrapper'>\r\n          <input type='text' placeholder='유튜브 링크를 입력하세요' spellCheck={false} ref={INPUT_ELEMENT} onKeyUp={CheckURL} />\r\n          { loading ? \r\n          <div className='loading-wrapper'>\r\n            <div className='loading'></div>\r\n          </div>\r\n          : null }\r\n          <div className='add-result' ref={DIV_ELEMENT2}></div>\r\n          <div className='close-add-music' onClick={CloseAddMusic}>닫기</div>\r\n      </div> \r\n      : null }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Hello\r\n","import ReactDOM from 'react-dom'\r\nimport Hello from './components/Hello'\r\n\r\nReactDOM.render(\r\n  <Hello />\r\n  ,document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}